#!/bin/bash
SCRIPT=$(realpath "$0")
SOURCE=$(dirname "$SCRIPT")
PROJECT_ROOT=$(realpath "${SOURCE}/..")

if [ -f ".env" ]
then
  echo ".env already exist! Will not overwrite!"
  exit 1
fi

local_DATAFED_WEB_KEY_DIR="${PROJECT_ROOT}/compose/keys"
if [ ! -d "$local_DATAFED_WEB_KEY_DIR" ]
then
  mkdir -p "$local_DATAFED_WEB_KEY_DIR"
fi

if [ -z "${DATAFED_COMPOSE_DOMAIN}" ]
then
  local_DATAFED_COMPOSE_DOMAIN="localhost"
else
  local_DATAFED_COMPOSE_DOMAIN=$(printenv DATAFED_COMPOSE_DOMAIN)
fi

local_DATAFED_WEB_CERT_NAME="cert.crt"
local_DATAFED_WEB_KEY_NAME="cert.key"

local_DATAFED_WEB_CERT_PATH="${local_DATAFED_WEB_KEY_DIR}/${local_DATAFED_WEB_CERT_NAME}"
local_DATAFED_WEB_CSR_PATH="${local_DATAFED_WEB_KEY_DIR}/cert.csr"
local_DATAFED_WEB_KEY_PATH="${local_DATAFED_WEB_KEY_DIR}/${local_DATAFED_WEB_KEY_NAME}"

if [ ! -e "$local_DATAFED_WEB_CERT_PATH" ] || [ ! -e "$local_DATAFED_WEB_KEY_PATH" ]
then
  if [ -e "$local_DATAFED_WEB_CERT_PATH" ]
  then
    rm "${local_DATAFED_WEB_CERT_PATH}"
  fi
  if [ -e "$local_DATAFED_WEB_KEY_PATH" ]
  then
    rm "${local_DATAFED_WEB_KEY_PATH}"
  fi
  if [ -e "$local_DATAFED_WEB_CSR_PATH" ]
  then
    rm "${local_DATAFED_WEB_CSR_PATH}"
  fi
  openssl genrsa -out "$local_DATAFED_WEB_KEY_PATH" 2048
  openssl req -new -key "$local_DATAFED_WEB_KEY_PATH" \
    -out "${local_DATAFED_WEB_CSR_PATH}" \
    -subj "/C=US/ST=TN/L=Oak Ridge/O=ORNL/OU=DLT/CN=${local_DATAFED_COMPOSE_DOMAIN}"
  openssl x509 -req -days 3650 \
     -in "${local_DATAFED_WEB_CSR_PATH}" \
     -signkey "$local_DATAFED_WEB_KEY_PATH" \
     -out "$local_DATAFED_WEB_CERT_PATH"
fi

if [ -z "${DATAFED_COMPOSE_USER89_PASSWORD}" ]
then
  local_DATAFED_COMPOSE_USER89_PASSWORD="" # For End to end testing
else
  local_DATAFED_COMPOSE_USER89_PASSWORD=$(printenv DATAFED_COMPOSE_USER89_PASSWORD)
fi
if [ -z "${DATAFED_COMPOSE_REPO_FORM_PATH}" ]
then
  local_DATAFED_COMPOSE_REPO_FORM_PATH="" # Where the repo form is located also needed for testing
else
  local_DATAFED_COMPOSE_REPO_FORM_PATH=$(printenv DATAFED_COMPOSE_REPO_FORM_PATH)
fi
if [ -z "${DATAFED_COMPOSE_GLOBUS_APP_SECRET}" ]
then
  local_DATAFED_COMPOSE_GLOBUS_APP_SECRET=""
else
  local_DATAFED_COMPOSE_GLOBUS_APP_SECRET=$(printenv DATAFED_COMPOSE_GLOBUS_APP_SECRET)
fi
if [ -z "${DATAFED_COMPOSE_GLOBUS_APP_ID}" ]
then
  local_DATAFED_COMPOSE_GLOBUS_APP_ID=""
else
  local_DATAFED_COMPOSE_GLOBUS_APP_ID=$(printenv DATAFED_COMPOSE_GLOBUS_APP_ID)
fi
if [ -z "${DATAFED_COMPOSE_ZEROMQ_SESSION_SECRET}" ]
then
  local_DATAFED_COMPOSE_ZEROMQ_SESSION_SECRET=""
else
  local_DATAFED_COMPOSE_ZEROMQ_SESSION_SECRET=$(printenv DATAFED_COMPOSE_ZEROMQ_SESSION_SECRET)
fi
if [ -z "${DATAFED_COMPOSE_ZEROMQ_SYSTEM_SECRET}" ]
then
  local_DATAFED_COMPOSE_ZEROMQ_SYSTEM_SECRET=""
else
  local_DATAFED_COMPOSE_ZEROMQ_SYSTEM_SECRET=$(printenv DATAFED_COMPOSE_ZEROMQ_SYSTEM_SECRET)
fi
if [ -z "${DATAFED_COMPOSE_HTTPS_SERVER_PORT}" ]
then
  local_DATAFED_COMPOSE_HTTPS_SERVER_PORT="443"
else
  local_DATAFED_COMPOSE_HTTPS_SERVER_PORT=$(printenv DATAFED_COMPOSE_HTTPS_SERVER_PORT)
fi
if [ -z "${DATAFED_COMPOSE_CONTAINER_LOG_PATH}" ]
then
  local_DATAFED_COMPOSE_CONTAINER_LOG_PATH="/datafed/logs"
else
  local_DATAFED_COMPOSE_CONTAINER_LOG_PATH=$(printenv DATAFED_COMPOSE_CONTAINER_LOG_PATH)
fi
if [ -z "${DATAFED_COMPOSE_DATABASE_PASSWORD}" ]
then
  local_DATAFED_COMPOSE_DATABASE_PASSWORD="butterscotch"
else
  local_DATAFED_COMPOSE_DATABASE_PASSWORD=$(printenv DATAFED_COMPOSE_DATABASE_PASSWORD)
fi

if [ -z "${DATAFED_COMPOSE_DATABASE_IP_ADDRESS}" ]
then
  local_DATAFED_COMPOSE_DATABASE_IP_ADDRESS="http://arango"
else
  local_DATAFED_COMPOSE_DATABASE_IP_ADDRESS=$(printenv DATAFED_COMPOSE_DATABASE_IP_ADDRESS)
fi

if [ -z "${DATAFED_COMPOSE_DATABASE_PORT}" ]
then
  local_DATAFED_COMPOSE_DATABASE_PORT="8529"
else
  local_DATAFED_COMPOSE_DATABASE_PORT=$(printenv DATAFED_COMPOSE_DATABASE_PORT)
fi

cat << EOF > ".env"
DATAFED_USER89_PASSWORD="${local_DATAFED_COMPOSE_USER89_PASSWORD}" # For End to end testing
DATAFED_REPO_FORM_PATH="${local_DATAFED_COMPOSE_REPO_FORM_PATH}" # Where the repo form is located also needed for testing
DATAFED_GLOBUS_APP_SECRET="${local_DATAFED_COMPOSE_GLOBUS_APP_SECRET}"
DATAFED_GLOBUS_APP_ID="${local_DATAFED_COMPOSE_GLOBUS_APP_ID}"
DATAFED_ZEROMQ_SESSION_SECRET="${local_DATAFED_COMPOSE_ZEROMQ_SESSION_SECRET}"
DATAFED_ZEROMQ_SYSTEM_SECRET="${local_DATAFED_COMPOSE_ZEROMQ_SYSTEM_SECRET}"
DATAFED_DOMAIN="${local_DATAFED_COMPOSE_DOMAIN}"
DATAFED_HTTPS_SERVER_PORT="${local_DATAFED_COMPOSE_HTTPS_SERVER_PORT}"
DATAFED_WEB_CERT_PATH="/opt/datafed/keys/${local_DATAFED_WEB_CERT_NAME}"
DATAFED_WEB_KEY_PATH="/opt/datafed/keys/${local_DATAFED_WEB_KEY_NAME}"
DATAFED_CONTAINER_LOG_PATH="${local_DATAFED_COMPOSE_CONTAINER_LOG_PATH}"
DATAFED_DATABASE_PASSWORD="${local_DATAFED_COMPOSE_DATABASE_PASSWORD}"
DATAFED_DATABASE_IP_ADDRESS="${local_DATAFED_COMPOSE_DATABASE_IP_ADDRESS}"
DATAFED_DATABASE_PORT="${local_DATAFED_COMPOSE_DATABASE_PORT}"
DATAFED_UID="$(id -u)"
EOF

cat << EOF > "unset_env.sh" 
#!/bin/bash
unset DATAFED_USER89_PASSWORD
unset DATAFED_REPO_FORM_PATH
unset DATAFED_GLOBUS_APP_SECRET
unset DATAFED_GLOBUS_APP_ID
unset DATAFED_ZEROMQ_SESSION_SECRET
unset DATAFED_ZEROMQ_SYSTEM_SECRET
unset DATAFED_DOMAIN
unset DATAFED_HTTPS_SERVER_PORT
unset DATAFED_WEB_CERT_PATH
unset DATAFED_WEB_KEY_PATH
unset DATAFED_CONTAINER_LOG_PATH
unset DATAFED_DATABASE_PASSWORD
unset DATAFED_DATABASE_IP_ADDRESS
unset DATAFED_DATABASE_PORT
unset DATAFED_UID
EOF

chmod +x ./unset_env.sh
